//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.33440。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="SendEmailToExtraNetSoap", Namespace="http://tempuri.org/")]
public partial class SendEmailToExtraNet : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
    
    private System.Threading.SendOrPostCallback SendMailOperationCompleted;
    
    private System.Threading.SendOrPostCallback SendTextMailOperationCompleted;
    
    /// <remarks/>
    public SendEmailToExtraNet() {
        this.Url = "http://localhost:48137/SendEmailToExtraNet.asmx";
    }
    
    /// <remarks/>
    public event HelloWorldCompletedEventHandler HelloWorldCompleted;
    
    /// <remarks/>
    public event SendMailCompletedEventHandler SendMailCompleted;
    
    /// <remarks/>
    public event SendTextMailCompletedEventHandler SendTextMailCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string HelloWorld() {
        object[] results = this.Invoke("HelloWorld", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndHelloWorld(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void HelloWorldAsync() {
        this.HelloWorldAsync(null);
    }
    
    /// <remarks/>
    public void HelloWorldAsync(object userState) {
        if ((this.HelloWorldOperationCompleted == null)) {
            this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
        }
        this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
    }
    
    private void OnHelloWorldOperationCompleted(object arg) {
        if ((this.HelloWorldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SendMail(string host, int port, string username, string password, string fromEmailName, string to, string subject, string mailbody) {
        this.Invoke("SendMail", new object[] {
                    host,
                    port,
                    username,
                    password,
                    fromEmailName,
                    to,
                    subject,
                    mailbody});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSendMail(string host, int port, string username, string password, string fromEmailName, string to, string subject, string mailbody, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SendMail", new object[] {
                    host,
                    port,
                    username,
                    password,
                    fromEmailName,
                    to,
                    subject,
                    mailbody}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSendMail(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SendMailAsync(string host, int port, string username, string password, string fromEmailName, string to, string subject, string mailbody) {
        this.SendMailAsync(host, port, username, password, fromEmailName, to, subject, mailbody, null);
    }
    
    /// <remarks/>
    public void SendMailAsync(string host, int port, string username, string password, string fromEmailName, string to, string subject, string mailbody, object userState) {
        if ((this.SendMailOperationCompleted == null)) {
            this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
        }
        this.InvokeAsync("SendMail", new object[] {
                    host,
                    port,
                    username,
                    password,
                    fromEmailName,
                    to,
                    subject,
                    mailbody}, this.SendMailOperationCompleted, userState);
    }
    
    private void OnSendMailOperationCompleted(object arg) {
        if ((this.SendMailCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SendMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendTextMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void SendTextMail(string host, int port, string username, string password, string fromEmailName, string to, string subject, string mailbody) {
        this.Invoke("SendTextMail", new object[] {
                    host,
                    port,
                    username,
                    password,
                    fromEmailName,
                    to,
                    subject,
                    mailbody});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSendTextMail(string host, int port, string username, string password, string fromEmailName, string to, string subject, string mailbody, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SendTextMail", new object[] {
                    host,
                    port,
                    username,
                    password,
                    fromEmailName,
                    to,
                    subject,
                    mailbody}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndSendTextMail(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void SendTextMailAsync(string host, int port, string username, string password, string fromEmailName, string to, string subject, string mailbody) {
        this.SendTextMailAsync(host, port, username, password, fromEmailName, to, subject, mailbody, null);
    }
    
    /// <remarks/>
    public void SendTextMailAsync(string host, int port, string username, string password, string fromEmailName, string to, string subject, string mailbody, object userState) {
        if ((this.SendTextMailOperationCompleted == null)) {
            this.SendTextMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTextMailOperationCompleted);
        }
        this.InvokeAsync("SendTextMail", new object[] {
                    host,
                    port,
                    username,
                    password,
                    fromEmailName,
                    to,
                    subject,
                    mailbody}, this.SendTextMailOperationCompleted, userState);
    }
    
    private void OnSendTextMailOperationCompleted(object arg) {
        if ((this.SendTextMailCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SendTextMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SendMailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
public delegate void SendTextMailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
